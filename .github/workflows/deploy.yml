name: Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      - name: Verify AWS CLI Installation
        run: aws --version

      - name: create cluster.
        run: |
          aws ecs create-cluster --cluster-name mycluster3
      - name: Create Task Definition
        run: |
          aws ecs register-task-definition --cli-input-json file://task-definition.json

      - name: Build project with Maven
        run: mvn -B package --file pom.xml


      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: my-data
          IMAGE_TAG: "latest"
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Create ECS Service
        env:
          AWS_REGION: ap-south-1
          ECS_CLUSTER: mycluster3
          ECS_SERVICE: new-service-latest3
          ECS_TASK_DEFINITION: latest-task-1
          COUNT: 1
          FARGATE: FARGATE
        run: |
          # aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment 
           aws ecs create-service \
            --cluster $ECS_CLUSTER \
            --service-name $ECS_SERVICE \
            --task-definition $ECS_TASK_DEFINITION \
            --desired-count $COUNT \
            --launch-type $FARGATE \
            --network-configuration "awsvpcConfiguration={subnets=[subnet-0ca77c1ad6ba4fb07],securityGroups=[sg-029eb7b59b83a8275],assignPublicIp=ENABLED}"
