name: Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
      
      #- name: Install AWS CLI
       # run: |
        #  sudo apt-get update
         # sudo apt-get install -y awscli

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
      
      - name: Build project with Maven
        run: mvn -B package --file pom.xml

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: my-data
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: create cluster.
        run: |
          aws ecs create-cluster --cluster-name mycluster2
      - name: create task defination family
        env:
          PATH: task-definition.json
        run: |
          aws ecs register-task-definition --cli-input-json file://$PATH
        
      - name: Deploy to ECS
        env:
          AWS_REGION: ap-south-1
          ECS_CLUSTER: mycluster2
          ECS_SERVICE: latest-service
          ECS_TASK_DEFINITION: latest-task
          CONTAINER_NAME: my-container2
          IMAGE_TAG: ${{ github.sha }}
          COUNT: 1
        run: |
          aws ecs create-service --cluster $ECS_CLUSTER --service-name $ECS_SERVICE --task-definition $ECS_TASK_DEFINITION  --desired-count $COUNT   --launch-type FARGATE   --network-configuration "awsvpcConfiguration={subnets=[subnet-0ca77c1ad6ba4fb07],securityGroups=[sg-029eb7b59b83a8275],assignPublicIp=ENABLED}"
